{"version":3,"sources":["components/joke.jsx","utilities/category.js","utilities/utils.js","App.js","reportWebVitals.js","state/jokesModel.js","state/CreateStore.js","index.js"],"names":["Jokes","joke","useStoreState","state","jokes","Wrapper","styled","div","src","icon_url","alt","value","updated_at","categories","Button","button","ScentedBox","App","getJokes","useStoreActions","loadingState","handleClick","e","preventDefault","currentTarget","innerHTML","useEffect","map","it","onClick","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","count","computed","Object","values","length","thunk","actions","category","a","setState","axios","get","res","setJokes","data","console","log","action","payload","done","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAwBeA,I,MAAAA,EArBf,WACA,IAAOC,EAAQC,aAAc,SAACC,GAAD,OAAWA,EAAMC,SAAvCH,KACDI,EAAUC,IAAOC,IAAV,iDAKX,OACE,eAACF,EAAD,WACA,qBAAKG,IAAKP,EAAKQ,SAAUC,IAAI,gBAC3B,6BACGT,EAAKU,QAGR,+CAAkBV,EAAKW,kBCddC,EAHI,CAAC,OAAO,MAAM,SAAS,QAAQ,UAAU,WAAW,YAAY,QACnF,QAAQ,QAAQ,UAAU,UAAU,SAAS,YAAY,SAAS,YCInDV,EALF,CACT,QAAU,UACV,MAAQ,QACR,KAAQ,QCKNW,EAASR,IAAOS,OAAV,yQAeJV,EAAUC,IAAOC,IAAV,wFAMPS,EAAaV,IAAOC,IAAV,wIAmCHU,EAzBH,WACV,IAAOC,EAAYC,aAAgB,SAAChB,GAAD,OAAWA,EAAMC,SAA7Cc,SACAE,EAAgBlB,aAAc,SAACC,GAAD,OAAWA,EAAMC,SAA/CgB,aAEP,SAASC,EAAYC,GACnBA,EAAEC,iBACFL,EAASI,EAAEE,cAAcC,WAM3B,OAJAC,qBAAU,WACRR,EAAS,SAER,IAED,eAAC,EAAD,WACGL,EAAWc,KAAI,SAAAC,GAAE,OAEhB,cAACd,EAAD,CAAkBe,QAASR,EAA3B,SAAyCO,GAA1BA,MAEjB,cAACZ,EAAD,UACGI,IAAiBjB,EAAM2B,QAAU,8CAAsB,cAAC,EAAD,UC9CjDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CCmBC5B,EAvBD,CACVgB,aAAeoB,EAASV,QACxB7B,KAAO,GACPwC,MAAMC,aAAS,SAACvC,GAAD,OAASwC,OAAOC,OAAOzC,EAAMF,MAAM4C,UAElD3B,SAAU4B,YAAK,uCAAC,WAAMC,EAAQC,EAAS7C,GAAvB,eAAA8C,EAAA,6DACZF,EAAQG,SAASV,EAASV,SADd,SAEMqB,IAAMC,IAAN,2DAA8DJ,IAFpE,OAENK,EAFM,OAGZN,EAAQO,SAASD,EAAIE,MACrBC,QAAQC,IAAIJ,EAAIE,MAJJ,2CAAD,2DAQfL,SAAWQ,aAAO,SAACvD,EAAMwD,GACrBxD,EAAMiB,aAAeuC,KAGzBL,SAAUI,aAAO,SAACvD,EAAMwD,GACpBxD,EAAMF,KAAM0D,EACZxD,EAAMiB,aAAeoB,EAASoB,SCdvBC,EAJDC,YAAY,CACvB1D,UCEH2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeJ,MAASA,EAAxB,SACA,cAAC,EAAD,QAIFK,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.5e38a242.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useStoreState} from 'easy-peasy';\nfunction Jokes() {\nconst {joke} = useStoreState((state) => state.jokes);\nconst Wrapper = styled.div`\n display: inline;\n\n`;\n\n  return (\n    <Wrapper>\n    <img src={joke.icon_url} alt='placeholder' ></img>\n      <h3>\n        {joke.value}\n      </h3>\n\n      <h6>Updated at : {joke.updated_at}</h6>\n      \n    </Wrapper>\n  );\n  \n}\n\nexport default Jokes;\n","const categories = [\"food\",\"dev\",'travel','sport','science','religion','political','music',\n'movie','money','history','fashion','career','celebrity','animal','explicit'];\n\nexport default categories","const state ={\n    'loading':'loading',\n    'error':'error',\n    'done' :'done'\n}\nexport default state;","import React, {useEffect} from 'react';\nimport { useStoreState,useStoreActions } from 'easy-peasy';\nimport styled from 'styled-components';\nimport Joke from './components/joke'\nimport categories from './utilities/category';\nimport state from './utilities/utils';\n\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0.5em 0.2em;\n  padding: 0.25em 1em;\n  \n  \n  &:hover {\n    background:palevioletred;\n    color:white \n  }\n  `;\n  \n  const Wrapper = styled.div`\n  display: inline-block;\n  align-items: center;\n  \n  \n  `;\n  const ScentedBox = styled.div`\n  color: palevioletred;\n  border: 2px solid palevioletred;\n  border-radius: 30px;\n  padding:10px;\n  \n  `;\n\n\n\nconst App = ()=> {\n  const {getJokes} = useStoreActions((state) => state.jokes);\n  const {loadingState} = useStoreState((state) => state.jokes);\n\n  function handleClick(e){\n    e.preventDefault()\n    getJokes(e.currentTarget.innerHTML)\n  }\n  useEffect(() => {\n    getJokes('dev')\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <Wrapper>\n      {categories.map(it => (\n        \n        <Button key = {it}onClick={handleClick}>{it}</Button>  \n      ))}\n      <ScentedBox>\n        {loadingState === state.loading ? <h3>loading ....</h3>:<Joke/>}\n      </ScentedBox>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {computed,action,thunk}  from 'easy-peasy'\nimport axios from 'axios';\nimport AppState from '../utilities/utils'\nconst jokes = {\n    loadingState : AppState.loading,\n    joke : {},\n    count:computed((state)=>Object.values(state.joke).length),\n\n    getJokes :thunk(async(actions,category,state)=>{\n        actions.setState(AppState.loading)\n        const res = await axios.get(`https://api.chucknorris.io/jokes/random?category=${category}`);\n        actions.setJokes(res.data)\n        console.log(res.data)\n\n    }),\n\n    setState : action((state,payload)=>{\n        state.loadingState = payload\n    }),\n\n    setJokes: action((state,payload)=>{\n        state.joke =payload\n        state.loadingState = AppState.done\n    }),\n\n}\nexport default jokes;","import { createStore } from 'easy-peasy';\nimport jokes from './jokesModel';\n\n\nconst store = createStore({\n   jokes,\n});\n\nexport default store;","import React from 'react';\nimport { StoreProvider } from 'easy-peasy';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './state/CreateStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store = {store}>\n    <App />\n    </StoreProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}